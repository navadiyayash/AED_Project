/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.VehicleSeller;

import Business.EcoSystem;
//import Business.Email.Email;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SCEnterprise;
import Business.Netwrk.Netwrk;
import Business.Organizations.MechanicOrg;
import Business.Organizations.Organizations;
import Business.UserAccount.UserAcc;
import Business.WorkQueue.SellerVehWorkReq;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saneel
 */
public class SellVehicle extends javax.swing.JPanel {

    /**
     * Creates new form SellVehicle
     */
    private JPanel container;
    private EcoSystem System;
    private UserAcc account;
    private Enterprise enterprise;

    public SellVehicle(JPanel container, UserAcc account, Enterprise enterprise, EcoSystem System) {
        initComponents();
        this.container = container;
        this.account = account;
        this.enterprise = enterprise;
        this.System = System;
        //submitbtn.setEnabled(false);
        populateSellTable();
        populateLoctn(); //location
    }

    private void populateSellTable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel model = (DefaultTableModel) tblSellerWR.getModel();

        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkReqLst()) {
            Object[] row = new Object[4];
            row[0] = request.getMsg();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((SellerVehWorkReq) request).getVehicle();
            row[3] = result == null ? "Awaiting" : result;

            model.addRow(row);
        }
    }

    public void populateLoctn() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        Netwrk network = (Netwrk) cbSellerLocation.getSelectedItem();
//
//        if (network != null) {
//            populateSC(network);
//        }
        for (Netwrk network : System.getNtwkLst()) {
            cbSellerLocation.addItem(network);
        }
    }

    public void populateSC(Netwrk network) { //Newtrk is a class , Enterprise.EPType t
        cbServiceCenter.removeAllItems();
        for (Enterprise e : network.getEnpr().getEpLst()) { //get enterprise and then enterprise list
            if (e instanceof SCEnterprise) //if (e.getEPType().equals(t)){
            //            {
            {
                cbServiceCenter.addItem(e); //enterprise cannot be converted to string error
            }//            }//            }//            /
//}
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblSellVeh = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblServiceCenter = new javax.swing.JLabel();
        lblMiles = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblTire = new javax.swing.JLabel();
        cbVehicleList = new javax.swing.JComboBox<>();
        cbServiceCenter = new javax.swing.JComboBox();
        cbSellerLocation = new javax.swing.JComboBox();
        txtManuYear = new javax.swing.JTextField();
        txtMiles = new javax.swing.JTextField();
        txtTires = new javax.swing.JTextField();
        txtAskPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSellerWR = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cb_rto_seller = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Vehicle Seller Informs Dealer");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSellVeh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSellVeh.setText("Sell Vehicle :");

        lblLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLocation.setText("Location :");

        lblYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblYear.setText("Manufacturing Year :");

        lblServiceCenter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblServiceCenter.setText("Service Center :");

        lblMiles.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMiles.setText("Total Miles Driven :");

        lblPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPrice.setText("Asking Price ($) :");

        lblTire.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTire.setText("Car Details :");

        cbVehicleList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "MotorCycle", "Sedan", "SUV", "SuperCar", "Pickup Truck", " " }));

        cbServiceCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServiceCenterActionPerformed(evt);
            }
        });

        cbSellerLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSellerLocationActionPerformed(evt);
            }
        });

        txtManuYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManuYearActionPerformed(evt);
            }
        });
        txtManuYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManuYearKeyPressed(evt);
            }
        });

        txtMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMilesActionPerformed(evt);
            }
        });
        txtMiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMilesKeyPressed(evt);
            }
        });

        txtAskPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAskPriceKeyPressed(evt);
            }
        });

        tblSellerWR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSellerWR);
        if (tblSellerWR.getColumnModel().getColumnCount() > 0) {
            tblSellerWR.getColumnModel().getColumn(0).setResizable(false);
            tblSellerWR.getColumnModel().getColumn(1).setResizable(false);
            tblSellerWR.getColumnModel().getColumn(2).setResizable(false);
            tblSellerWR.getColumnModel().getColumn(3).setResizable(false);
        }

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("RTO :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSellVeh, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblServiceCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(lblTire, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTires, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbVehicleList, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMiles)
                                .addComponent(txtManuYear)
                                .addComponent(cbServiceCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbSellerLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAskPrice)
                                .addComponent(cb_rto_seller, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 949, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(btnRefresh)
                        .addGap(315, 315, 315)
                        .addComponent(btnSubmit)))
                .addContainerGap(660, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbSellerLocation, cbServiceCenter, cbVehicleList, txtAskPrice, txtManuYear, txtMiles, txtTires});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbVehicleList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSellVeh, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSellerLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServiceCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbServiceCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTire, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTires, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMiles, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAskPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cb_rto_seller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(btnSubmit))
                .addContainerGap(330, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateSellTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //takes me back to the previous page
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (((String) cbVehicleList.getSelectedItem()).equalsIgnoreCase("--Select--")) //ignore select since we want vehicle types
        {
            JOptionPane.showMessageDialog(null, "Please select Vehicle Type you want to Sell");
            return;
//        } else if (((String) cbServiceCenter.getSelectedItem()).equalsIgnoreCase("--Select--")) //ignore select since we want vehicle types
//        {
//            JOptionPane.showMessageDialog(null, "Please select which service center");
//            return;
//        } else if (((String) cbSellerLocation.getSelectedItem()).equalsIgnoreCase("--Select--")) //ignore select since we want vehicle types
//        {
//            JOptionPane.showMessageDialog(null, "Please select which Location you want to Sell");
//            return;
        } else if (txtManuYear.getText().equals("")
                || txtMiles.getText().equals("")
                || txtTires.getText().equals("")
                || txtAskPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all Text Boxes!!");
            return;
        } else {
            String message = (String) cbVehicleList.getSelectedItem();
            String ManuYear = this.txtManuYear.getText();
            String Miles = this.txtMiles.getText();
            String Tires = this.txtTires.getText();
            String AskPrice = this.txtAskPrice.getText();
            SellerVehWorkReq request = new SellerVehWorkReq();

            request.setMsg(message);
            request.setSender(account);
            request.setStatus("Shared");
            request.setRole("Seller"); // assign role to the user whether he is a seller buyer mechanic or loan agent
            request.setManuYear(ManuYear);
            request.setMilesDriven(Miles);
            request.setTireInf(Tires);
            request.setPrice(AskPrice);

            //from here we connect with sellervehworkreq to get setter for provided data
            Organizations org = null;

            //from here we connect with ecosystem
            for (Netwrk network : System.getNtwkLst()) {
                for (Enterprise enterprise : network.getEnpr().getEpLst()) //we get enterprise directory enpr from network and then we get enterprise directory list from epdir in b.e
                {
                    for (Organizations organization : enterprise.getOrgDir().getOrgLst()) {
                        //using for we we check for organization through enterprise and organization directory
                        if (network.equals(cbSellerLocation.getSelectedItem())) {
                            if (enterprise.equals(cbServiceCenter.getSelectedItem())) {
                                if (organization instanceof MechanicOrg) {
                                    //instance of is used so that is value is null it will throw false
                                    org = organization;
                                    break;
                                }
                            }

                        }
                    }
                }
            }
            if (org == null) {
                JOptionPane.showMessageDialog(null, "There was no Mechanic available at selected Service Center !");
                return;
            }
            if (org != null) {
                org.getWorkQueue().getWorkReqLst().add(request);
                account.getWorkQueue().getWorkReqLst().add(request);
                JOptionPane.showMessageDialog(null, "Your request has been initiated, please check status on view details");
                populateSellTable();
//            try{
//            Email emailConfig= new Email();
//            Properties smtpProperties = emailConfig.loadProperties();
//            String email = account.getUsername();
//            emailConfig.sendEmail(smtpProperties, email, "Request Initiated", "Your request has being sent to the Transplantation center");
//        }
//            catch(Exception ex){
//                
//            }
            }

        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbServiceCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServiceCenterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbServiceCenterActionPerformed

    private void cbSellerLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSellerLocationActionPerformed
        // TODO add your handling code here:
        Netwrk network = (Netwrk) cbSellerLocation.getSelectedItem();

        if (network != null) {
            populateSC(network);
        }
    }//GEN-LAST:event_cbSellerLocationActionPerformed

    private void txtManuYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManuYearKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c >= '0' && c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            txtManuYear.setEditable(true);
        } else {
            txtManuYear.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter only numbers !");
        }
    }//GEN-LAST:event_txtManuYearKeyPressed

    private void txtManuYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManuYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManuYearActionPerformed

    private void txtMilesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMilesKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c >= '0' && c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            txtManuYear.setEditable(true);
        } else {
            txtManuYear.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter only numbers !");
        }
    }//GEN-LAST:event_txtMilesKeyPressed

    private void txtAskPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAskPriceKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c >= '0' && c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            txtManuYear.setEditable(true);
        } else {
            txtManuYear.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter only numbers !");
        }
    }//GEN-LAST:event_txtAskPriceKeyPressed

    private void txtMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMilesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbSellerLocation;
    private javax.swing.JComboBox cbServiceCenter;
    private javax.swing.JComboBox<String> cbVehicleList;
    private javax.swing.JComboBox<String> cb_rto_seller;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblMiles;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSellVeh;
    private javax.swing.JLabel lblServiceCenter;
    private javax.swing.JLabel lblTire;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTable tblSellerWR;
    private javax.swing.JTextField txtAskPrice;
    private javax.swing.JTextField txtManuYear;
    private javax.swing.JTextField txtMiles;
    private javax.swing.JTextField txtTires;
    // End of variables declaration//GEN-END:variables

}
