/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.buyer;

import Business.EcoSystem;
//import Business.Email.Email;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SCEnterprise;
import Business.Netwrk.Netwrk;
import Business.Organizations.BuyerOrg;
import Business.Organizations.MechanicOrg;
import Business.Organizations.Organizations;
import Business.Organizations.RtoOrg;
import Business.UserAccount.UserAcc;
import Business.WorkQueue.BuyerVehicleWorkReq;
import Business.WorkQueue.SellerVehWorkReq;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yashn
 */
public class CarRequest extends javax.swing.JPanel {

    /**
     * Creates new form CarRequest
     */
    private JPanel container;
    private EcoSystem system;
    private UserAcc acc;
    private Enterprise ENPR;

    public CarRequest(JPanel container, UserAcc acc, Enterprise ENPR, EcoSystem system) {
        initComponents();

        this.container = container;
        this.acc = acc;
        this.system = system;
        this.ENPR = ENPR;

        populateCarWorkRequestJTable();
        populatecbLocation();
//        populateRtoList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblVehicleType = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblCarName = new javax.swing.JLabel();
        lblServiceCenter = new javax.swing.JLabel();
        lblManuYear = new javax.swing.JLabel();
        lblMaintenanceDet = new javax.swing.JLabel();
        lblCarCond = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehicleWorkReq = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        cbLocation = new javax.swing.JComboBox();
        cbServiceCenter = new javax.swing.JComboBox();
        cbVehicleType = new javax.swing.JComboBox<>();
        txtManuYear = new javax.swing.JTextField();
        txtCarName = new javax.swing.JTextField();
        txtMiles = new javax.swing.JTextField();
        txtMaintDet = new javax.swing.JTextField();
        btnSelectVehPrice = new javax.swing.JButton();

        setBackground(new java.awt.Color(240, 234, 199));

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Welcome to Car Request Page");

        lblVehicleType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblVehicleType.setText("Vehicle Type :");

        lblLocation.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLocation.setText("Location :");

        lblCarName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCarName.setText("Car Name :");

        lblServiceCenter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblServiceCenter.setText("Select Dealer :");

        lblManuYear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblManuYear.setText("Preferred Manufacture Year:");

        lblMaintenanceDet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMaintenanceDet.setText("Comments :");

        lblCarCond.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCarCond.setText("Tentative Miles Driven ?");

        tblVehicleWorkReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Vehicle Type", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVehicleWorkReq.setShowHorizontalLines(false);
        tblVehicleWorkReq.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblVehicleWorkReq);
        if (tblVehicleWorkReq.getColumnModel().getColumnCount() > 0) {
            tblVehicleWorkReq.getColumnModel().getColumn(0).setResizable(false);
            tblVehicleWorkReq.getColumnModel().getColumn(1).setResizable(false);
            tblVehicleWorkReq.getColumnModel().getColumn(2).setResizable(false);
        }

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        cbLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocationActionPerformed(evt);
            }
        });

        cbServiceCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServiceCenterActionPerformed(evt);
            }
        });

        cbVehicleType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "MotorCycle", "Sedan", "SUV", "SuperCar", "Pickup Truck" }));

        txtManuYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManuYearActionPerformed(evt);
            }
        });
        txtManuYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtManuYearKeyPressed(evt);
            }
        });

        txtCarName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarNameActionPerformed(evt);
            }
        });

        txtMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMilesActionPerformed(evt);
            }
        });
        txtMiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMilesKeyPressed(evt);
            }
        });

        txtMaintDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaintDetActionPerformed(evt);
            }
        });

        btnSelectVehPrice.setText("Request for Selected Vehicle Price");
        btnSelectVehPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectVehPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(btnSelectVehPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(186, 186, 186)
                                .addComponent(btnSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(298, 298, 298)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblManuYear)
                                    .addComponent(lblCarName)
                                    .addComponent(lblCarCond)
                                    .addComponent(lblMaintenanceDet)
                                    .addComponent(lblVehicleType)
                                    .addComponent(lblLocation)
                                    .addComponent(lblServiceCenter))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbVehicleType, 0, 264, Short.MAX_VALUE)
                                        .addComponent(txtManuYear)
                                        .addComponent(cbServiceCenter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCarName)
                                        .addComponent(txtMiles))
                                    .addComponent(txtMaintDet, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 529, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnSubmit});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCarCond, lblCarName, lblLocation, lblMaintenanceDet, lblManuYear, lblServiceCenter, lblVehicleType});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbVehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVehicleType))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocation))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbServiceCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblServiceCenter))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarName)
                    .addComponent(txtMaintDet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManuYear))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCarCond))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintenanceDet)
                    .addComponent(txtCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnSelectVehPrice))
                .addContainerGap(367, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBack, btnSubmit});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtManuYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManuYearActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtManuYearActionPerformed

    private void txtCarNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarNameActionPerformed

    private void txtMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMilesActionPerformed

    private void txtMaintDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaintDetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaintDetActionPerformed

    private void btnSelectVehPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectVehPriceActionPerformed
        // TODO add your handling code here:
        RequestCost rc = new RequestCost(container, acc, ENPR, system, (Netwrk) cbLocation.getSelectedItem(), (Enterprise) cbServiceCenter.getSelectedItem());
        CardLayout layout = (CardLayout) container.getLayout();
        container.add(rc);
        layout.next(container);
    }//GEN-LAST:event_btnSelectVehPriceActionPerformed

    public void popENPRComboBox(Netwrk netwrk) { //populate enterprise
        cbServiceCenter.removeAllItems();
        for (Enterprise er : netwrk.getEnpr().getEpLst()) {
            if (er instanceof SCEnterprise) {
                cbServiceCenter.addItem(er);
            }
        }
    }

    //if network is not filled then location will also be empty
    private void cbLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocationActionPerformed
        // TODO add your handling code here:
        Netwrk netwrk = (Netwrk) cbLocation.getSelectedItem();

        if (netwrk != null) {
            popENPRComboBox(netwrk);
        }
    }//GEN-LAST:event_cbLocationActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (((String) cbVehicleType.getSelectedItem()).equalsIgnoreCase("...Select...")) {
            JOptionPane.showMessageDialog(null, "Plz select your preferenced VehicleType");
            return;
        } else if (txtCarName.getText().equals("")
                || txtManuYear.getText().equals("")
                || txtMiles.getText().equals("")
                || txtMaintDet.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the car details!!");
            return;
        } else {

            String msg = (String) cbVehicleType.getSelectedItem();
            String carname = this.txtCarName.getText();
            String manuyear = this.txtManuYear.getText();
            String txtMiles = this.txtMiles.getText();
            String maitenancedetails = txtMaintDet.getText();
            BuyerVehicleWorkReq request = new BuyerVehicleWorkReq();

            request.setMsg(msg);
            request.setSender(acc);
            request.setStatus("Sent");
            request.setRole("Buyer");
            request.setVehicle(carname);
            request.setManuYear(manuyear);
            request.setTireInf(txtMiles);
            request.setComments(maitenancedetails);

            Organizations org = null;
            for (Netwrk netwrk : system.getNtwkLst()) {
                for (Enterprise ENPR : netwrk.getEnpr().getEpLst()) {
                    for (Organizations organization : ENPR.getOrgDir().getOrgLst()) {
                        if (netwrk.equals(cbLocation.getSelectedItem())) {
                            if (ENPR.equals(cbServiceCenter.getSelectedItem())) {
                                if (organization instanceof MechanicOrg) {
                                    org = organization;
                                    break;
                                }
                            }
//                            if (ENPR.equals(cb_rto.getSelectedItem())) {
//                                if (organization instanceof RtoOrg) {
//                                    org = organization;
//                                    break;
//                                }
//                            }
                        }
                    }
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkReqLst().add(request);
                acc.getWorkQueue().getWorkReqLst().add(request);
                JOptionPane.showMessageDialog(null, "Your request initiated");
                populateCarWorkRequestJTable();
//                try {
//                    Email emailConfig = new Email();
//                    Properties smtpProperties = emailConfig.loadProperties();
//                    String email = acc.getU_name();
//                    emailConfig.sendEmail(smtpProperties, email, "Request Initiated", "Requested to Service center");
//                } catch (Exception ex) {
//
//                }
            }
            if (org == null) {
                JOptionPane.showMessageDialog(null, "There is no mechanic in the Service Center !");
                return;
            }

        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbServiceCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServiceCenterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbServiceCenterActionPerformed

    private void txtManuYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManuYearKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c >= '0' && c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            txtManuYear.setEditable(true);
        } else {
            txtManuYear.setEditable(true);
            JOptionPane.showMessageDialog(null, "Please enter only numbers !");
        }
    }//GEN-LAST:event_txtManuYearKeyPressed

    private void txtMilesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMilesKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c >= '0' && c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)) {
            txtManuYear.setEditable(true);
        } else {
            txtManuYear.setEditable(true);
            JOptionPane.showMessageDialog(null, "Please enter only numbers !");
        }
    }//GEN-LAST:event_txtMilesKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSelectVehPrice;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbLocation;
    private javax.swing.JComboBox cbServiceCenter;
    private javax.swing.JComboBox<String> cbVehicleType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarCond;
    private javax.swing.JLabel lblCarName;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblMaintenanceDet;
    private javax.swing.JLabel lblManuYear;
    private javax.swing.JLabel lblServiceCenter;
    private javax.swing.JLabel lblVehicleType;
    private javax.swing.JTable tblVehicleWorkReq;
    private javax.swing.JTextField txtCarName;
    private javax.swing.JTextField txtMaintDet;
    private javax.swing.JTextField txtManuYear;
    private javax.swing.JTextField txtMiles;
    // End of variables declaration//GEN-END:variables

    public void populateCarWorkRequestJTable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel model = (DefaultTableModel) tblVehicleWorkReq.getModel();

        model.setRowCount(0);
        for (WorkRequest request : acc.getWorkQueue().getWorkReqLst()) {
            Object[] row = new Object[4];
            row[0] = request.getMsg();
            row[1] = request.getReceiver();
//            row[2] = request.;
            String result = ((BuyerVehicleWorkReq) request).getMaintDet();
            row[2] = result == null ? "Awaiting" : result;
            model.addRow(row);
        }
    }

    public void populatecbLocation() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        for (Netwrk netwrk : system.getNtwkLst()) {
            cbLocation.addItem(netwrk);
        }
    }

//    public void populateRtoList() {
//        System.out.println("RtoList test = ");
//        ArrayList<Netwrk> netwrkList = system.getNtwkLst();
//        for (int i = 0; i < netwrkList.size(); i++) {
//            for (int j = 0; j < netwrkList.get(i).getEnpr().getEpLst().size(); j++) {
//                Enterprise ep = netwrkList.get(i).getEnpr().getEpLst().get(j);
//                System.out.println("EPType= " + ep.getName());
//                if (ep.getEpType() == Enterprise.EPType.RTO) {
//                    cb_rto.addItem(ep.getName());
//                }
//            }
//        }
//    }

}
